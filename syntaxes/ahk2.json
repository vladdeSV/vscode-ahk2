{
  "name": "AutoHotkey",
  "scopeName": "source.ahk2",
  "uuid": "76BDF974-5687-424E-BE8E-7D789DF50844",
  "repository": {
    "escape-character": {
      "name": "constant.character.escape.ahk",
      "match": "`[\"`:nrbtsvaf]"
    },
    "block-comment": {
      "name": "comment.block.ahk",
      "begin": "/\\*",
      "end": "\\*/",
      "patterns": [
        {
          "include": "#block-comment"
        }
      ]
    },
    "built-in-magic-variables": {
      "patterns": [
        {
          "include": "#built-in-special-character"
        },
        {
          "include": "#built-in-script-properties"
        },
        {
          "include": "#built-in-date-time"
        },
        {
          "include": "#built-in-script-settings"
        },
        {
          "include": "#built-in-user-idle-time"
        },
        {
          "include": "#built-in-hotkey-hotstring-custom-menu-item"
        },
        {
          "include": "#built-in-operating-system-user-info"
        },
        {
          "include": "#built-in-misc"
        },
        {
          "include": "#built-in-loop"
        }
      ]
    },
    "built-in-special-character": {
      "name": "keyword.other.special-character.ahk",
      "match": "\\b(?i:a_(space|tab))\\b"
    },
    "built-in-script-properties": {
      "name": "keyword.other.script-properties.ahk",
      "match": "\\b(?i:a_(args|workingdir|initialworkingdir|scriptdir|scriptname|scriptfullpath|scripthwnd|linenumber|linefile|thisfunc|ahkversion|ahkpath|iscompiled))\\b"
    },
    "built-in-date-time": {
      "name": "keyword.other.date-time.ahk",
      "match": "\\b(?i:a_(yyyy|m{2,4}|d{2,4}|wday|yday|yweek|hour|min|sec|msec|now(utc)?|tickcount))\\b"
    },
    "built-in-script-settings": {
      "name": "keyword.other.script-settings.ahk",
      "match": "\\b(?i:a_(allowmainwindow|controldelay|coordmode(tooltip|pixel|mouse|caret|menu)|defaultmousespeed|detecthidden(text|windows)|fileencoding|icon(hidden|tip|file|number)|is(critical|paused|suspended)|keydelay(play)?|keyduration(play)?|listlines|mousedelay(play)?|regview|send(level|mode)|storecapslockmode|titlematchmode(speed)?|traymenu|windelay))\\b"
    },
    "built-in-user-idle-time": {
      "name": "keyword.other.user-idle-time.ahk",
      "match": "\\b(?i:a_(timeidle(physical|keyboard|mouse)?))\\b"
    },
    "built-in-hotkey-hotstring-custom-menu-item": {
      "name": "keyword.other.hotkey-hotstring-custom-menu-item.ahk",
      "match": "\\b(?i:a_(thishotkey|priorhotkey|priorkey|timesincethishotkey|timesincepriorhotkey|endchar))\\b"
    },
    "built-in-operating-system-user-info": {
      "name": "keyword.other.operating-system-user-info.ahk",
      "match": "\\b(?i:a_(appdata(common)?|computername|comspec|desktop(common)?|is64bitos|isadmin|language|mydocuments|osversion|programfiles|programs(common)?|ptrsize|screendpi|screenheight|screenwidth|startmenu(common)?|startup(common)?|temp|username|windir))\\b"
    },
    "built-in-misc": {
      "name": "keyword.other.misc.ahk",
      "match": "\\b(?i:a_(clipboard|cursor|eventinfo|lasterror))\\b"
    },
    "built-in-loop": {
      "name": "keyword.other.loop.ahk",
      "match": "\\b(?i:a_(index|loop(file|reg|read)name|loopfield))\\b"
    }
  },
  "patterns": [
    {
      "match": "(^|[ \\t])(;.*)",
      "captures": {
        "2": {
          "name": "comment.line.character.semicolon.ahk"
        }
      }
    },
    {
      "include": "#block-comment"
    },
    {
      "name": "string.quoted.single.ahk",
      "begin": "'",
      "end": "'|$",
      "patterns": [
        {
          "include": "#escape-character"
        }
      ]
    },
    {
      "name": "string.quoted.double.ahk",
      "begin": "\"",
      "end": "\"|$",
      "patterns": [
        {
          "include": "#escape-character"
        }
      ]
    },
    {
      "match": "::\\s*(`\\{)",
      "captures": {
        "1": {
          "name": "constant.character.escape.open-brace.ahk"
        }
      }
    },
    {
      "match": "(`;)",
      "captures": {
        "1": {
          "name": "constant.character.escape.ahk"
        }
      }
    },
    {
      "match": "[^\\t ](`);",
      "captures": {
        "1": {
          "name": "invalid.illegal.unecessary.ahk"
        }
      }
    },
    {
      "name": "constant.numeric.hexadecimal.ahk",
      "match": "\\b(?i:0x[\\da-f]+)\\b"
    },
    {
      "name": "constant.numeric.scientific.ahk",
      "match": "\\b\\d+[Ee][-+]?\\d+\\b"
    },
    {
      "name": "constant.numeric.integer.ahk",
      "match": "\\b\\d+\\b"
    },
    {
      "name": "directive.numeric.ahk",
      "match": "(#(?i:clipboardtimeout|hotiftimeout|hotkeyinterval|hotkeymodifiertimeout|inputlevel|keyhistory|maxhotkeysperinterval|maxthreads|maxthreadsperhotkey))\\s+(\\d+)?",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        },
        "2": {
          "name": "constant.numeric.directive.ahk"
        }
      }
    },
    {
      "name": "directive.boolean.ahk",
      "match": "(#(?i:maxthreadsbuffer|usehook))\\s+((?i:true|false)|([01]))?",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        },
        "2": {
          "name": "constant.language.boolean.ahk"
        },
        "3": {
          "name": "constant.numeric.boolean-substitue.ahk"
        }
      }
    },
    {
      "name": "directive.string.ahk",
      "match": "(#(?i:dllload|include|includeagain))\\s+(\".*?\")?",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        },
        "2": {
          "name": "string.quoted.ahk"
        }
      }
    },
    {
      "name": "directive.single.ahk",
      "match": "(#(?i:installkeybdhook|installmousehook|notrayicon|persistent|winactivateforce))",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        }
      }
    },
    {
      "name": "directive.custom.singleinstance.ahk",
      "match": "(#(?i:singleinstance))\\s+((?i:force|prompt|ignore|off))?",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        },
        "2": {
          "name": "string.unquoted.directive.ahk"
        }
      }
    },
    {
      "name": "directive.custom.errorstdout.ahk",
      "todo": "support both \" and ' ",
      "match": "(#(?i:errorstdout))\\s+(\"(?i:utf-8|utf-8-raw|utf-16|utf-16-raw|cp\\d{3})\")?",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        },
        "2": {
          "name": "string.quoted.other.directive.ahk"
        }
      }
    },
    {
      "name": "directive.custom.requires.ahk",
      "match": "(#(?i:requires))\\s+(AutoHotkey([\\s\\t](v?[12]\\d*(\\.\\d)?(\\.\\d)?(-(a\\d+)?(\\.\\d+)?)?))?)?",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        },
        "2": {
          "name": "string.unquoted.directive.ahk"
        },
        "4": {
          "name": "variable.other.version.ahk"
        }
      }
    },
    {
      "name": "directive.custom.hotif.ahk",
      "match": "(#(?i:hotif))\\b",
      "captures": {
        "1": {
          "name": "keyword.other.directive.ahk"
        }
      }
    },
    {
      "name": "invalid.illegal.directive.unknown.ahk",
      "match": "#\\w+"
    },
    {
      "include": "#built-in-magic-variables"
    }
  ]
}
